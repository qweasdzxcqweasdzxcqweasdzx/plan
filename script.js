// –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è - JavaScript –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
class Presentation {
    constructor() {
        this.currentSlide = 0;
        this.slides = document.querySelectorAll('.slide');
        this.totalSlides = this.slides.length; // –¢–µ–ø–µ—Ä—å –±—É–¥–µ—Ç 13 —Å–ª–∞–π–¥–æ–≤
        this.isAnimating = false;
        
        this.init();
    }
    
    init() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
        this.bindEvents();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.initMobileNavigation();
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥
        this.showSlide(0);
        
        // –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–π
        this.startAnimations();
    }
    
    bindEvents() {
        // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
        document.addEventListener('keydown', (e) => {
            if (this.isAnimating) return;
            
            switch(e.key) {
                case 'ArrowLeft':
                case 'ArrowUp':
                    e.preventDefault();
                    this.previousSlide();
                    break;
                case 'ArrowRight':
                case 'ArrowDown':
                case ' ': // –ü—Ä–æ–±–µ–ª
                    e.preventDefault();
                    this.nextSlide();
                    break;
                case 'Home':
                    e.preventDefault();
                    this.goToSlide(0);
                    break;
                case 'End':
                    e.preventDefault();
                    this.goToSlide(this.totalSlides - 1);
                    break;
            }
        });
        
        // –ö–æ–ª–µ—Å–æ –º—ã—à–∏
        let wheelTimeout;
        document.addEventListener('wheel', (e) => {
            if (this.isAnimating) return;
            
            e.preventDefault();
            clearTimeout(wheelTimeout);
            wheelTimeout = setTimeout(() => {
                if (e.deltaY > 0) {
                    this.nextSlide();
                } else {
                    this.previousSlide();
                }
            }, 50);
        }, { passive: false });
        
        // –°–≤–∞–π–ø—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
        let startX = 0;
        let startY = 0;
        let isVerticalScroll = false;
        
        document.addEventListener('touchstart', (e) => {
            startX = e.touches[0].clientX;
            startY = e.touches[0].clientY;
            isVerticalScroll = false;
        }, { passive: true });
        
        document.addEventListener('touchmove', (e) => {
            if (!startX || !startY) return;
            
            const diffX = startX - e.touches[0].clientX;
            const diffY = startY - e.touches[0].clientY;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–∞–π–ø–∞
            if (Math.abs(diffY) > Math.abs(diffX)) {
                isVerticalScroll = true;
            }
            
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å–∫—Ä–æ–ª–ª —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤
            if (!isVerticalScroll && Math.abs(diffX) > 30) {
                e.preventDefault();
            }
        }, { passive: false });
        
        document.addEventListener('touchend', (e) => {
            if (this.isAnimating) return;
            
            const endX = e.changedTouches[0].clientX;
            const endY = e.changedTouches[0].clientY;
            const diffX = startX - endX;
            const diffY = startY - endY;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π –¥–ª–∏–Ω–æ–π
            if (!isVerticalScroll && Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > 80) {
                if (diffX > 0) {
                    this.nextSlide();
                } else {
                    this.previousSlide();
                }
            }
            
            // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π
            startX = 0;
            startY = 0;
            isVerticalScroll = false;
        }, { passive: true });
    }
    
    showSlide(index) {
        if (this.isAnimating || index === this.currentSlide) return;
        
        this.isAnimating = true;
        
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–∞–π–¥–∞
        this.slides[this.currentSlide].classList.remove('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
        this.currentSlide = index;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –Ω–æ–≤–æ–º—É —Å–ª–∞–π–¥—É
        setTimeout(() => {
            this.slides[this.currentSlide].classList.add('active');
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
            this.animateSlideContent();
            
            setTimeout(() => {
                this.isAnimating = false;
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                this.updateSlideIndicator();
            }, 800);
        }, 50);
    }
    
    nextSlide() {
        const nextIndex = (this.currentSlide + 1) % this.totalSlides;
        this.showSlide(nextIndex);
        // –í–∏–±—Ä–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        if (navigator.vibrate) {
            navigator.vibrate(50);
        }
    }
    
    previousSlide() {
        const prevIndex = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
        this.showSlide(prevIndex);
        // –í–∏–±—Ä–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        if (navigator.vibrate) {
            navigator.vibrate(50);
        }
    }
    
    goToSlide(index) {
        if (index >= 0 && index < this.totalSlides) {
            this.showSlide(index);
        }
    }
    
    animateSlideContent() {
        const currentSlideElement = this.slides[this.currentSlide];
        const elements = currentSlideElement.querySelectorAll('.card-base, .photo-card, .responsibility-item, .training-card, .event-card, .month-event, .training-category, .info-card');
        
        elements.forEach((element, index) => {
            element.style.opacity = '0';
            element.style.transform = 'translateY(30px)';
            
            setTimeout(() => {
                element.style.transition = 'all 0.6s ease';
                element.style.opacity = '1';
                element.style.transform = 'translateY(0)';
            }, index * 100 + 200);
        });
    }
    
    initMobileNavigation() {
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        
        if (prevBtn && nextBtn) {
            prevBtn.addEventListener('click', () => {
                if (!this.isAnimating) this.previousSlide();
            });
            
            nextBtn.addEventListener('click', () => {
                if (!this.isAnimating) this.nextSlide();
            });
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        this.updateSlideIndicator();
    }
    
    updateSlideIndicator() {
        const currentSlideElement = document.getElementById('currentSlide');
        if (currentSlideElement) {
            currentSlideElement.textContent = this.currentSlide + 1;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        
        if (prevBtn) {
            prevBtn.disabled = this.currentSlide === 0;
        }
        
        if (nextBtn) {
            nextBtn.disabled = this.currentSlide === this.totalSlides - 1;
        }
    }
    
    startAnimations() {
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–ª–∞–≤–∞—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const floatingElements = document.querySelectorAll('.element');
        floatingElements.forEach((element, index) => {
            element.style.animationDelay = `${index * 0.5}s`;
        });
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
        setTimeout(() => {
            this.animateSlideContent();
        }, 500);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    const presentation = new Presentation();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const loader = document.createElement('div');
    loader.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #2d5a27 0%, #4a7c59 50%, #6b8e23 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        transition: opacity 0.5s ease;
    `;
    
    loader.innerHTML = `
        <div class="loading-indicator" style="
            color: white;
            font-size: 1.2rem;
            font-weight: 300;
            animation: pulse 2s ease-in-out infinite;
            text-align: center;
            max-width: 80%;
        ">
            <div style="font-size: 3rem; margin-bottom: 20px;">üå±</div>
            <div style="margin-bottom: 10px;">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏...</div>
            <div style="font-size: 0.9rem; opacity: 0.8;">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤...</div>
        </div>
    `;
    
    document.body.appendChild(loader);
    
    // –£–±–∏—Ä–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫ —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        loader.style.opacity = '0';
        setTimeout(() => {
            document.body.removeChild(loader);
        }, 500);
    }, 1500);
});

// CSS –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ JavaScript
const style = document.createElement('style');
style.textContent = `
    @keyframes pulse {
        0%, 100% { opacity: 1; transform: scale(1); }
        50% { opacity: 0.7; transform: scale(1.05); }
    }
`;
document.head.appendChild(style);

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é
setTimeout(() => {
    const hint = document.createElement('div');
    hint.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: rgba(45, 90, 39, 0.9);
        backdrop-filter: blur(10px);
        color: white;
        padding: 15px 20px;
        border-radius: 15px;
        font-size: 14px;
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.5s ease;
        border: 1px solid rgba(144, 238, 144, 0.3);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    `;
    
    hint.innerHTML = `
        <div style="font-weight: 600; margin-bottom: 8px; color: #90EE90;">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</div>
        <div>üëÜ –°–≤–∞–π–ø—ã –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ</div>
        <div>‚Üê ‚Üí —Å—Ç—Ä–µ–ª–∫–∏</div>
        <div>üñ±Ô∏è –∫–æ–ª–µ—Å–∏–∫–æ –º—ã—à–∏</div>
        <div>–ü—Ä–æ–±–µ–ª - —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥</div>
    `;
    
    document.body.appendChild(hint);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
    setTimeout(() => {
        hint.style.opacity = '1';
    }, 100);
    
    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 6 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        hint.style.opacity = '0';
        setTimeout(() => {
            document.body.removeChild(hint);
        }, 500);
    }, 6000);
}, 2500);

// –ú–æ–±–∏–ª—å–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –æ —Å–≤–∞–π–ø–∞—Ö
if (window.innerWidth <= 768) {
    setTimeout(() => {
        const mobileHint = document.createElement('div');
        mobileHint.style.cssText = `
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(46, 125, 50, 0.95);
            backdrop-filter: blur(15px);
            color: white;
            padding: 25px 30px;
            border-radius: 20px;
            font-size: 18px;
            text-align: center;
            z-index: 2000;
            opacity: 0;
            transition: opacity 0.5s ease;
            border: 2px solid rgba(129, 199, 132, 0.4);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
            max-width: 90%;
        `;
        
        mobileHint.innerHTML = `
            <div style="font-size: 2.5rem; margin-bottom: 15px;">üëÜ</div>
            <div style="font-weight: 600; margin-bottom: 10px; color: #90EE90;">–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–∞–ª—å—Ü–µ–º</div>
            <div style="margin-bottom: 15px;">–≤–ª–µ–≤–æ –∏–ª–∏ –≤–ø—Ä–∞–≤–æ</div>
            <div style="font-size: 14px; opacity: 0.8;">–¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–ª–∞–π–¥–æ–≤</div>
        `;
        
        document.body.appendChild(mobileHint);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        setTimeout(() => {
            mobileHint.style.opacity = '1';
        }, 100);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ –∫–ª–∏–∫—É –∏–ª–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        const hideMobileHint = () => {
            mobileHint.style.opacity = '0';
            setTimeout(() => {
                if (document.body.contains(mobileHint)) {
                    document.body.removeChild(mobileHint);
                }
            }, 500);
        };
        
        mobileHint.addEventListener('click', hideMobileHint);
        setTimeout(hideMobileHint, 5000);
    }, 3000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', () => {
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
    const elements = document.querySelectorAll('.element');
    elements.forEach(element => {
        element.style.transform = 'translate(0, 0)';
    });
});
